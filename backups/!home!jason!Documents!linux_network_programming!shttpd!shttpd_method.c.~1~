/***********************************************
Describe: this program is a very simple example
          of http server
Date: Nov 14, 2011
 ***********************************************/

#include "shttpd.h"

static int Method_DoGet(struct worker_ctl *wctl)
{
     DBGPRINT("==>Method_DoGet\n");
     struct conn_response *res = &wctl->conn.con_res;
     struct conn_request *req = &wctl->conn.con_req;
     char path[URI_MAX];
     memset(path, 0, URI_MAX);
     
     size_t n;
     unsigned long r1, r2;
     char *fmt = "%a, %d %b %Y, %H:%M:%S GMT";
     
     /*需要确定的参数*/
     size_t status = 200;              /*状态值*/
     char *msg = "OK";                 /*状态信息*/
     char date[64] = "";               /*时间*/
     char lm[64] = "";                 /*请求文件最后修改信息*/
     char etag[64] = "";               /*etag信息*/
     bit_int_t cl;                     /*内容长度*/
     char range[64] = "";              /*范围*/
     struct mine_type *mine = NULL;
     
     /*当前时间*/
     time_t t = time(NULL);
     (void)strftime(date, sizeof(date), fmt, localtime(&t));
     
     /*最后修改时间*/
     (void)strftime(lm, sizeof(lm), fmt, localtime(&res->fsate.st_mtime));

     /*ETAG*/
     (void)snprint(etag, sizeof(etag), "%ls.%ls", (unsigned long)res->fsate.st_mtime,
                   (unsigned long)res->fsate.st_size);
     
     /*发送的MIME类型*/
     mine = Mine_Type(req->uri, strlen(req->uri), wctl);
     
     /*内容长度*/
     cl = (big_int_t)res->fsate.st_size;
     
     /*范围range*/
     memset(range, 0, sizeof(range));
     n = -1;
     if (req->ch.range.v_vec.len > 0)
     {
          printf("request range: %d\n", req->ch.range.v_vec.len);
          n = sscanf(req->ch.range.v_vec.ptr, "bytes=%lu-%lu", &r1, &r2);
     }
     
     printf("n: %d\n", n);
     if (n > 0)
     {
          status = 206;
          lseek(res->fd, r1, SEEK_SET);
          cl = n == 2 ? r2 - r1 + 1 : cl - r1;
          (void)snprintf(range, sizeof(range), "Content-Range: bytes %lu-%lu/%lu\r\n",
                         r1, r1 + cl - 1, (unsigned long)res->fsate.st_size);
          msg = "Partial Content";
     }
     
     memset(res->res.ptr, 0, sizeof(wctl->conn.dres));
     snprintf(res->res.ptr, sizeof(wctl->conn.dres), 
              "HTTP/1.1 %d %s\r\n"
              "Date: %s\r\n"
              "Last-Modified: %s\r\n"
              "Etag: \"%s\"\r\n"
              "Content-Type: %.*s\r\n"
              "Content-Length: %lu\r\n"
              "Accept-Ranges: bytes\r\n"
              "%s\r\n",
              status,
              msg,
              date,
              lm,
              etag,
              strlen(mine->mine_type),
              mine->mine_type,
              cl,
              range);
     res->cl = cl;
     res->status = status;
     printf("content length: %d, status: %d\n", res->cl, res->status);
     DBGPRINT("<==Method_DoGet");
     return 0;
}
