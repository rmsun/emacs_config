#include "../lib/unp.h"

int main(int argc, char *argv[])
{
     int listenfd, connfd;
     pid_t childpid;
     socklen_t clilen;
     struct sockaddr_in cliaddr, servaddr;
     
     if ((listenfd = socket(AF_INET,  SOCK_STREAM, 0)) < 0)
          err_sys("socket error");
     
     bzero(&servaddr, sizeof(servaddr));
     servaddr.sin_family = AF_INET;
     servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
     servaddr.sin_port = htons(SERV_PORT);
     
     if (bind(listenfd, (struct sockaddr*)&servaddr, sizeof(servaddr)) < 0)
          err_sys("bind error");
     
     if (listen(listenfd, LISTENQ) < 0)
          err_sys("listen error");
     
     for ( ; ; )
     {
          clilen = sizeof(cliaddr);
          if ((connfd = accept(listenfd, (struct sockaddr*)&cliaddr, &clilen)) < 0)
               err_sys("accept error");
          
          if ((childpid = fork()) < 0)
               err_sys("fork error");
          if (childpid == 0)                /*child process*/
          {
               if (close(listenfd) < 0)
                    err_sys("close listenfd error"); /*close listening socket*/
               str_echo(connfd);            /*process the request*/
               exit(0);
          }
          if (close(connfd) < 0)
               err_sys("close connfd error"); /*close listening socket*/
     }
     
     return 0;
}
